name: Build + Release
on:
  push:
    branches:
      - build/github-actions
    tags:
      - 'v*.*.*'

jobs:
  bandcamp_downloader_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v1

      - name: Install cargo-deb
        run: cargo install cargo-deb

      - name: Install dependencies
        run: |
          export DEBIAN_FRONTED=noninteractive
          sudo apt-get -qq update
          sudo apt-get install -y libxkbcommon-dev

      - name: Checkout
        uses: actions/checkout@master

      - name: Enable Link Time Optimizations
        run: |
          echo "[profile.release]" >> Cargo.toml
          echo "lto = true" >> Cargo.toml

      - name: Build binary
        run: cargo build --verbose --release

      - name: Create release dir
        run: |
          mkdir linux_bin
          cp -r intl linux_bin/
          cp target/release/bandcamp_downloader linux_bin/

      - name: Archive binary
        uses: actions/upload-artifact@v1
        with:
          name: bandcamp_downloader-x86_64-unknown-linux-gnu
          path: linux_bin/

    # TODO deb build that includes resources
    # - name: Pack bandcamp_downloader .deb package
    #   run: cargo deb --no-build

    # - name: Rename bandcamp_downloader .deb package
    #   run: mv target/debian/*.deb target/debian/bandcamp_downloader-x86_64-debian-linux-gnu.deb

    # - name: Archive bandcamp_downloader .deb package
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: bandcamp_downloader-x86_64-debian-linux-gnu
    #     path: target/debian/bandcamp_downloader-x86_64-debian-linux-gnu.deb

  bandcamp_downloader_windows:
    runs-on: windows-latest
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v1

      - name: Checkout
        uses: actions/checkout@master

      - name: Enable Link Time Optimizations
        run: |
          echo "[profile.release]" >> Cargo.toml
          echo "lto = true" >> Cargo.toml

      - name: Enable static CRT linkage
        run: |
          mkdir .cargo
          echo '[target.x86_64-pc-windows-msvc]' >> .cargo/config
          echo 'rustflags = ["-Ctarget-feature=+crt-static"]' >> .cargo/config

      - name: Build bandcamp_downloader binary
        run: cargo build --verbose --release

      - name: Create release dir
        run: |
          mkdir release_bin
          cp -r intl release_bin/
          cp target/release/bandcamp_downloader.exe release_bin/
      # TODO include any other windows deps

      - name: Archive binary
        uses: actions/upload-artifact@v1
        with:
          name: bandcamp_downloader-x86_64-pc-windows-msvc
          path: release_bin/

  # UNTESTED
  bandcamp_downloader_macos:
    runs-on: macOS-latest
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v1

      - name: Checkout
        uses: actions/checkout@master

      - name: Enable Link Time Optimizations
        run: |
          echo "[profile.release]" >> Cargo.toml
          echo "lto = true" >> Cargo.toml

      - name: Build bandcamp_downloader binary
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.14
        run: cargo build --verbose --release

      - name: Create release dir
        run: |
          mkdir release_bin
          cp -r intl release_bin/
          cp target/release/bandcamp_downloader release_bin/

      - name: Archive binary
        uses: actions/upload-artifact@v1
        with:
          name: bandcamp_downloader-x86_64-apple-darwin
          path: release_bin/

  create_release:
    needs:
      - bandcamp_downloader_linux
      - bandcamp_downloader_macos
      - bandcamp_downloader_windows
    runs-on: ubuntu-latest
    steps:
    # - uses: actions/checkout@v2
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "bandcamp_downloader-*"
        # bodyFile: "body.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: true
